{"version":3,"sources":["images/gold-gradient-background.png","components/Arrow/Arrow.js","components/TableHeaders/TableHeaders.js","components/PaginationFooter/PaginationFooter.js","components/SearchInput/SearchInput.js","components/Table/Table.js","components/CurrencyPage.js","shared/urls.js","shared/functions/getDataForTable.js","shared/functions/fetchData.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","style","none","display","up","padding","transform","down","arrowStyle","Arrow","props","sorting","react_default","a","createElement","Fragment","header","cursor","backgroundColor","color","headerLeft","borderTopLeftRadius","headerRight","borderTopRightRadius","TableHeader","state","handleSorting","Object","objectSpread","onClick","sortingKey","footer","width","footerBtns","textAlign","border","footerPage","footerRight","borderBottomRightRadius","footerLeft","borderBottomLeftRadius","PaginationFooter","handlePagination","pageEnd","input","borderRadius","height","SearchInput","handleSearch","onKeyUp","event","table","numCell","justifyContent","Table","arrayForTable","map","value","key","data","date","base","currencyCode","dataForTable","CurrencyPage","rates","_i","_Object$entries","entries","length","_ref3","_ref2","slicedToArray","push","urlCurrencyLatest","getDataForTable","result","setState","sessionStorage","setItem","JSON","stringify","fetchData","url","dealWithTheResult","fetch","method","then","ok","json","alert","catch","err","console","error","appStyle","backgroundImage","concat","gold","App","_useState","useState","getItem","parse","page","_useState2","useEffect","className","components_CurrencyPage","rowKey","paging","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.72e692f6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/gold-gradient-background.44159229.png\";","import React from 'react';\r\n\r\nconst style = {\r\n    none: {\r\n        display: \"none\"\r\n    },\r\n    up: {\r\n        display: \"inline-block\",\r\n        padding: \"10px\",\r\n        transform: \"rotate(-90deg)\"\r\n    },\r\n    down: {\r\n        display: \"inline-block\",\r\n        padding: \"10px\",\r\n        transform: \"rotate(90deg)\"\r\n    }\r\n};\r\nlet arrowStyle = style.none;\r\n\r\nexport default function Arrow(props) {\r\n    const { sorting } = props;\r\n\r\n    switch (sorting) {\r\n        case \"desc\":\r\n            arrowStyle = style.up;\r\n            break;\r\n        case \"asc\":\r\n            arrowStyle = style.down;\r\n            break;\r\n        default:\r\n            arrowStyle = style.none;\r\n            break;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <span style={arrowStyle}>\r\n                >\r\n            </span>\r\n        </>\r\n    );\r\n}","import React from 'react';\r\n//components\r\nimport Arrow from '../Arrow/Arrow';\r\n\r\nconst style = {\r\n    header: {\r\n        cursor: \"pointer\",\r\n        backgroundColor: \"darkslategrey\",\r\n        color: \"white\"\r\n    },\r\n    headerLeft: {\r\n        borderTopLeftRadius: \"25px\"\r\n    },\r\n    headerRight: {\r\n        borderTopRightRadius: \"25px\"\r\n    }\r\n};\r\n\r\nexport default function TableHeader(props) {\r\n    const { state, handleSorting } = props;\r\n\r\n    return (\r\n        <>\r\n            <th\r\n                style={{ ...style.header, ...style.headerLeft }}\r\n                onClick={() => handleSorting(\"code\")}\r\n            >\r\n                Stock exchange date\r\n                {state.sortingKey === \"code\" ?\r\n                    <Arrow sorting={state.sorting} />\r\n                    : null\r\n                }\r\n            </th>\r\n            <th\r\n                style={style.header}\r\n                onClick={() => handleSorting(\"name\")}\r\n            >\r\n                Base currency\r\n                {state.sortingKey === \"name\" ?\r\n                    <Arrow sorting={state.sorting} />\r\n                    : null\r\n                }\r\n            </th>\r\n            <th\r\n                style={style.header}\r\n                onClick={() => handleSorting(\"city\")}\r\n            >\r\n                Currency\r\n                {state.sortingKey === \"city\" ?\r\n                    <Arrow sorting={state.sorting} />\r\n                    : null\r\n                }\r\n            </th>\r\n            <th\r\n                style={{ ...style.header, ...style.headerRight }}\r\n                onClick={() => handleSorting(\"value\")}\r\n            >\r\n                Value\r\n                {state.sortingKey === \"value\" ?\r\n                    <Arrow sorting={state.sorting} />\r\n                    : null\r\n                }\r\n            </th>\r\n        </>\r\n    );\r\n}","import React from 'react';\r\n\r\nconst style = {\r\n    footer: {\r\n        display: \"flex\",\r\n        width: \"90vw\"\r\n    },\r\n    footerBtns: {\r\n        textAlign: \"center\",\r\n        cursor: \"pointer\",\r\n        backgroundColor: \"darkslategrey\",\r\n        color: \"white\",\r\n        border: \"1px solid black\",\r\n        width: \"40vw\"\r\n    },\r\n    footerPage: {\r\n        textAlign: \"center\",\r\n        backgroundColor: \"darkslategrey\",\r\n        color: \"white\",\r\n        border: \"1px solid black\",\r\n        width: \"10vw\"\r\n    },\r\n    footerRight: {\r\n        borderBottomRightRadius: \"25px\"\r\n    },\r\n    footerLeft: {\r\n        borderBottomLeftRadius: \"25px\"\r\n    }\r\n};\r\n\r\nexport default function PaginationFooter(props) {\r\n    const { handlePagination, state } = props;\r\n\r\n    return (\r\n        <>\r\n            <div style={style.footer}>\r\n                <div\r\n                    style={{ ...style.footerBtns, ...style.footerLeft }}\r\n                    onClick={() => handlePagination(\"prev\")}\r\n                >\r\n                    Previous\r\n                    </div>\r\n                <div\r\n                    style={style.footerPage}\r\n                >\r\n                    Page: {state.pageEnd / 10}\r\n                </div>\r\n                <div\r\n                    style={{ ...style.footerBtns, ...style.footerRight }}\r\n                    onClick={() => handlePagination(\"next\")}\r\n                >\r\n                    Next\r\n                    </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import React from 'react';\r\n//style\r\nconst style = {\r\n    input: {\r\n        borderRadius: \"25px\",\r\n        height: \"23px\"\r\n    }\r\n};\r\n\r\nexport default function SearchInput(props) {\r\n    const { handleSearch } = props;\r\n\r\n    return (\r\n        <>\r\n            <form>\r\n                <label>Search:\r\n                    <input \r\n                        style={style.input}\r\n                        onKeyUp={event => handleSearch(event)}\r\n                    />\r\n                </label>\r\n            </form>\r\n        </>\r\n    );\r\n}\r\n","import React from 'react';\r\n//components\r\nimport TableHeader from '../TableHeaders/TableHeaders';\r\nimport PaginationFooter from '../PaginationFooter/PaginationFooter';\r\nimport SearchInput from '../SearchInput/SearchInput';\r\n\r\nconst style = {\r\n    table: {\r\n        width: \"90vw\"\r\n    },\r\n    numCell: {\r\n        display: \"flex\",\r\n        justifyContent: \"flex-end\"\r\n    }\r\n};\r\n\r\nexport default function Table(props) {\r\n    const { arrayForTable, state, handleSorting, handlePagination, handleSearch } = props;\r\n\r\n    return (\r\n        <>\r\n            <SearchInput\r\n                handleSearch={handleSearch}\r\n            />\r\n            <table style={style.table}>\r\n                <thead>\r\n                    <tr>\r\n                        <TableHeader\r\n                            handleSorting={handleSorting}\r\n                            state={state}\r\n                        />\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {arrayForTable.map((value, key) => (\r\n                        <tr key={key}>\r\n                            <td>{state.data.date}</td>\r\n                            <td>{state.data.base}</td>\r\n                            <td>{value.currencyCode}</td>\r\n                            <td>{value.value}</td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n            <PaginationFooter\r\n                handlePagination={handlePagination}\r\n                state={state}\r\n            />\r\n        </>\r\n    );\r\n}\r\n","import React from 'react';\r\n//components\r\nimport Table from './Table/Table';\r\n//variables\r\nconst dataForTable = [];\r\n\r\nfunction CurrencyPage(props) {\r\n    const {\r\n        state,\r\n        handleSorting,\r\n        handlePagination,\r\n        handleSearch\r\n    } = props;\r\n\r\n    if (state.data.rates) {\r\n        for (const [key, value] of Object.entries(state.data.rates)) {\r\n            dataForTable.push({currencyCode: key, value: value});\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <h1>Currency table</h1>\r\n            <p>With a growing number of options for your needs</p>\r\n            <Table\r\n                arrayForTable={dataForTable}\r\n                state={state}\r\n                handleSorting={handleSorting}\r\n                handlePagination={handlePagination}\r\n                handleSearch={handleSearch}\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CurrencyPage;\r\n","export const urlCurrencyLatest = \"https://api.exchangeratesapi.io/latest\";\r\n","export const getDataForTable = (result, setState) => {\r\n    sessionStorage.setItem(\"data\", JSON.stringify(result));\r\n    setState(state => ({ ...state, data: result }));\r\n};","export const fetchData = (url, dealWithTheResult, setState) => {\r\n    fetch(url, { method: \"GET\" })\r\n        .then(data => {\r\n            if (data.ok) {\r\n                const response = data.json();\r\n                response.then(result => {\r\n                    dealWithTheResult(result, setState);\r\n                });\r\n            } else {\r\n                alert(\"Wystąpił błąd. Przepraszamy\");\r\n            }\r\n        })\r\n        .catch(err => {\r\n            console.error(err);\r\n        });\r\n};","import React, { useState, useEffect } from 'react';\r\n//components\r\nimport CurrencyPage from './components/CurrencyPage';\r\n//url\r\nimport { urlCurrencyLatest } from './shared/urls';\r\n//functions\r\nimport { getDataForTable } from './shared/functions/getDataForTable';\r\nimport { fetchData } from './shared/functions/fetchData';\r\n// import { sortObjects } from './components/TableHeaders/TableHeadersFunc';\r\n// import { pagingTable } from './components/PaginationFooter/PaginationFooterFunc';\r\n// import { searchTable } from './components/SearchInput/SearchInputFunc';\r\n//images\r\nimport gold from './images/gold-gradient-background.png';\r\n//style\r\nconst style = {\r\n    appStyle: {\r\n        backgroundImage: `url(${gold})`\r\n    }\r\n}\r\n\r\nfunction App() {\r\n    //state*****************************************************************\r\n    const [state, setState] = useState({\r\n        data: sessionStorage.getItem(\"data\") ? JSON.parse(sessionStorage.getItem(\"data\")) : [],\r\n        page: [],\r\n        pageEnd: 10,\r\n        sortingKey: null,\r\n        sorting: null\r\n    });\r\n    //functions**************************************************************\r\n    useEffect(() => {\r\n        if (!sessionStorage.getItem(\"data\")) {\r\n            fetchData(urlCurrencyLatest, getDataForTable, setState);\r\n        };\r\n        return;\r\n    }, []);\r\n\r\n    const handleSorting = rowKey => {\r\n        //sortObjects(state, rowKey, setState);\r\n    };\r\n    const handlePagination = paging => {\r\n        //pagingTable(state, paging, setState);\r\n    };\r\n    const handleSearch = event => {\r\n        // let searchValue = event.target.value;\r\n        // searchTable(state, searchValue, setState);\r\n    };\r\n    //component********************************************************************\r\n    return (\r\n        <div\r\n            className=\"App\"\r\n            style={style.appStyle}\r\n        >\r\n            <CurrencyPage\r\n                state={state}\r\n                handleSorting={handleSorting}\r\n                handlePagination={handlePagination}\r\n                handleSearch={handleSearch}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}