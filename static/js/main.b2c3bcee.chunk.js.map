{"version":3,"sources":["components/Arrow/Arrow.js","components/TableHeaders/TableHeaders.js","components/PaginationFooter/PaginationFooter.js","components/SearchInput/SearchInput.js","components/MobileButtons/MobileButtons.js","components/Table/Table.js","shared/urls.js","shared/sharedFunctions.js","components/TableHeaders/TableHeadersFunc.js","components/PaginationFooter/PaginationFooterFunc.js","components/SearchInput/SearchInputFunc.js","App.js","serviceWorker.js","index.js"],"names":["style","none","display","up","padding","transform","down","arrowStyle","Arrow","props","sorting","react_default","a","createElement","Fragment","header","cursor","backgroundColor","mobileColumnTitle","TableHeader","state","handleSorting","isMobile","mobileColumn","onClick","sortingKey","footerBtns","textAlign","footerPage","PaginationFooter","handlePagination","colSpan","pageEnd","SearchInput","handleSearch","onKeyUp","event","mobileBtns","color","width","height","fontSize","btnSelected","MobileButtons","handleMobileColumn","table","numCell","justifyContent","Table","page","map","value","key","code","name","city","parameter","unit","urlCountries","urlCitiesWithParameter","fetchData","url","dealWithResult","setState","fetch","method","mode","headers","Content-Type","then","data","ok","json","result","results","alert","catch","err","console","error","getCitiesWithParameter","resultArray","promisesArray","_loop","i","push","res","Object","objectSpread","log","Promise","all","slicedArr","slice","setCountriesWithCities","sortAscending","arrOfObj","byKey","sort","b","objA","objB","comparison","sortObjects","rowKey","object","pageStart","ascending","descending","sortDescending","pagingTable","paging","newStart","newEnd","maxStart","length","searchTable","searchValue","stateArr","newArr","arrLen","concat","toLowerCase","indexOf","uniq","toConsumableArray","Set","App","_useState","useState","_useState2","slicedToArray","useEffect","useLayoutEffect","checkSize","window","innerWidth","addEventListener","removeEventListener","className","target","Boolean","location","hostname","match","ReactDOM","render","StrictMode","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.b2c3bcee.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst style = {\r\n    none: {\r\n        display: \"none\"\r\n    },\r\n    up: {\r\n        display: \"inline-block\",\r\n        padding: \"10px\",\r\n        transform: \"rotate(-90deg)\"\r\n    },\r\n    down: {\r\n        display: \"inline-block\",\r\n        padding: \"10px\",\r\n        transform: \"rotate(90deg)\"\r\n    }\r\n};\r\nlet arrowStyle = style.none;\r\n\r\nexport default function Arrow(props) {\r\n    const { sorting } = props;\r\n\r\n    switch (sorting) {\r\n        case \"desc\":\r\n            arrowStyle = style.up;\r\n            break;\r\n        case \"asc\":\r\n            arrowStyle = style.down;\r\n            break;\r\n        default:\r\n            arrowStyle = style.none;\r\n            break;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <span style={arrowStyle}>\r\n                >\r\n            </span>\r\n        </>\r\n    );\r\n}","import React from 'react';\r\n//components\r\nimport Arrow from '../Arrow/Arrow';\r\n\r\nconst style = {\r\n    header: {\r\n        cursor: \"pointer\",\r\n        backgroundColor: \"black\"\r\n    }\r\n};\r\nlet mobileColumnTitle = \"City\";\r\n\r\nexport default function TableHeader(props) {\r\n    const { state, handleSorting } = props;\r\n    \r\n    if (state.isMobile) {\r\n        switch (state.mobileColumn) {\r\n            case \"city\":\r\n                mobileColumnTitle = \"City\";\r\n                break;\r\n            case \"parameter\":\r\n                mobileColumnTitle = \"Parameter\";\r\n                break;\r\n            case \"value\":\r\n                mobileColumnTitle = \"Value\";\r\n                break;\r\n            case \"unit\":\r\n                mobileColumnTitle = \"Unit\";\r\n                break;\r\n            default:\r\n                mobileColumnTitle = \"City\";\r\n                break;\r\n        };\r\n    };\r\n\r\n    return (\r\n        state.isMobile ?\r\n            <>\r\n                <th\r\n                    style={style.header}\r\n                    onClick={() => handleSorting(\"code\")}\r\n                >\r\n                    Country code\r\n                {state.sortingKey === \"code\" ?\r\n                        <Arrow sorting={state.sorting} />\r\n                        : null\r\n                    }\r\n                </th>\r\n                <th\r\n                    style={style.header}\r\n                    onClick={() => handleSorting(\"name\")}\r\n                >\r\n                    Name\r\n                {state.sortingKey === \"name\" ?\r\n                        <Arrow sorting={state.sorting} />\r\n                        : null\r\n                    }\r\n                </th>\r\n                <th\r\n                    style={style.header}\r\n                    onClick={() => handleSorting(state.mobileColumn)}\r\n                >\r\n                    {mobileColumnTitle}\r\n                    {state.sortingKey === state.mobileColumn ?\r\n                        <Arrow sorting={state.sorting} />\r\n                        : null\r\n                    }\r\n                </th>\r\n            </>\r\n            :\r\n            <>\r\n                <th\r\n                    style={style.header}\r\n                    onClick={() => handleSorting(\"code\")}\r\n                >\r\n                    Country Code\r\n                {state.sortingKey === \"code\" ?\r\n                        <Arrow sorting={state.sorting} />\r\n                        : null\r\n                    }\r\n                </th>\r\n                <th\r\n                    style={style.header}\r\n                    onClick={() => handleSorting(\"name\")}\r\n                >\r\n                    Name\r\n                {state.sortingKey === \"name\" ?\r\n                        <Arrow sorting={state.sorting} />\r\n                        : null\r\n                    }\r\n                </th>\r\n                <th\r\n                    style={style.header}\r\n                    onClick={() => handleSorting(\"city\")}\r\n                >\r\n                    City\r\n                {state.sortingKey === \"city\" ?\r\n                        <Arrow sorting={state.sorting} />\r\n                        : null\r\n                    }\r\n                </th>\r\n                <th\r\n                    style={style.header}\r\n                    onClick={() => handleSorting(\"parameter\")}\r\n                >\r\n                    Parameter\r\n                {state.sortingKey === \"parameter\" ?\r\n                        <Arrow sorting={state.sorting} />\r\n                        : null\r\n                    }\r\n                </th>\r\n                <th\r\n                    style={style.header}\r\n                    onClick={() => handleSorting(\"value\")}\r\n                >\r\n                    Value\r\n                {state.sortingKey === \"value\" ?\r\n                        <Arrow sorting={state.sorting} />\r\n                        : null\r\n                    }\r\n                </th>\r\n                <th\r\n                    style={style.header}\r\n                    onClick={() => handleSorting(\"unit\")}\r\n                >\r\n                    Unit\r\n                {state.sortingKey === \"unit\" ?\r\n                        <Arrow sorting={state.sorting} />\r\n                        : null\r\n                    }\r\n                </th>\r\n            </>\r\n    );\r\n}","import React from 'react';\r\n\r\nconst style = {\r\n    footerBtns: {\r\n        textAlign: \"center\",\r\n        cursor: \"pointer\",\r\n        backgroundColor: \"black\"\r\n    },\r\n    footerPage: {\r\n        textAlign: \"center\",\r\n        backgroundColor: \"black\"\r\n    }\r\n};\r\n\r\nexport default function PaginationFooter(props) {\r\n    const { handlePagination, state } = props;\r\n\r\n    return (\r\n        <>\r\n            <tfoot>\r\n                <tr>\r\n                    <td\r\n                        style={style.footerBtns}\r\n                        onClick={() => handlePagination(\"prev\")}\r\n                        colSpan={\r\n                            state.isMobile ? \"1\" : \"2\"\r\n                        }\r\n                    >\r\n                        Previous\r\n                    </td>\r\n                    <td\r\n                        style={style.footerPage}\r\n                        colSpan={\r\n                            state.isMobile ? \"1\" : \"2\"\r\n                        }\r\n                    >\r\n                        Page: {state.pageEnd / 10}\r\n                    </td>\r\n                    <td\r\n                        style={style.footerBtns}\r\n                        onClick={() => handlePagination(\"next\")}\r\n                        colSpan={\r\n                            state.isMobile ? \"1\" : \"2\"\r\n                        }\r\n                    >\r\n                        Next\r\n                    </td>\r\n                </tr>\r\n            </tfoot>\r\n        </>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function SearchInput(props) {\r\n    const { handleSearch } = props;\r\n\r\n    return (\r\n        <>\r\n            <form>\r\n                <label>Search:\r\n                    <input \r\n                        onKeyUp={event => handleSearch(event)}\r\n                    />\r\n                </label>\r\n            </form>\r\n        </>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\nconst style = {\r\n    mobileBtns: {\r\n        cursor: \"pointer\",\r\n        backgroundColor: \"#282c34\",\r\n        color: \"white\",\r\n        width: \"35vw\",\r\n        height: \"50px\",\r\n        padding: \"2px\",\r\n        fontSize: \"20px\"\r\n    },\r\n    btnSelected: {\r\n        backgroundColor: \"black\",\r\n        color: \"white\",\r\n        width: \"35vw\",\r\n        height: \"50px\",\r\n        padding: \"2px\",\r\n        fontSize: \"20px\"\r\n    }\r\n};\r\n\r\nexport default function MobileButtons(props) {\r\n    const { handleMobileColumn, state } = props;\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <button\r\n                    style={state.mobileColumn === \"city\" ?\r\n                        style.btnSelected\r\n                        : style.mobileBtns}\r\n                    onClick={() => handleMobileColumn(\"city\")}\r\n                >\r\n                    City\r\n                </button>\r\n                <button\r\n                    style={state.mobileColumn === \"parameter\" ?\r\n                        style.btnSelected\r\n                        : style.mobileBtns}\r\n                    onClick={() => handleMobileColumn(\"parameter\")}\r\n                >\r\n                    Parameter\r\n                    </button>\r\n            </div>\r\n            <div>\r\n                <button\r\n                    style={state.mobileColumn === \"value\" ?\r\n                        style.btnSelected\r\n                        : style.mobileBtns}\r\n                    onClick={() => handleMobileColumn(\"value\")}\r\n                >\r\n                    Value\r\n                    </button>\r\n                <button\r\n                    style={state.mobileColumn === \"unit\" ?\r\n                        style.btnSelected\r\n                        : style.mobileBtns}\r\n                    onClick={() => handleMobileColumn(\"unit\")}\r\n                >\r\n                    Unit\r\n                    </button>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import React from 'react';\r\n//components\r\nimport TableHeader from '../TableHeaders/TableHeaders';\r\nimport PaginationFooter from '../PaginationFooter/PaginationFooter';\r\nimport SearchInput from '../SearchInput/SearchInput';\r\nimport MobileButtons from '../MobileButtons/MobileButtons';\r\n\r\nconst style = {\r\n    table: {\r\n        width: \"90vw\"\r\n    },\r\n    numCell: {\r\n        display: \"flex\",\r\n        justifyContent: \"flex-end\"\r\n    }\r\n};\r\n\r\nexport default function Table(props) {\r\n    const { state, handleSorting, handlePagination, handleSearch, handleMobileColumn } = props;\r\n\r\n    return (\r\n        <>\r\n            {state.isMobile ?\r\n                <MobileButtons\r\n                    handleMobileColumn={handleMobileColumn}\r\n                    state={state}\r\n                />\r\n                : null}\r\n            <SearchInput\r\n                handleSearch={handleSearch}\r\n            />\r\n            <table style={style.table}>\r\n                <thead>\r\n                    <tr>\r\n                        <TableHeader\r\n                            handleSorting={handleSorting}\r\n                            state={state}\r\n                        />\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {state.page.map((value, key) => (\r\n                        state.isMobile ?\r\n                            <tr key={key}>\r\n                                <td>{value.code}</td>\r\n                                <td>{value.name}</td>\r\n                                {state.mobileColumn === \"value\" ?\r\n                                    <td><div style={style.numCell}>{value[state.mobileColumn]}</div></td>\r\n                                    : <td>{value[state.mobileColumn]}</td>\r\n                                }\r\n                            </tr>\r\n                            :\r\n                            <tr key={key}>\r\n                                <td>{value.code}</td>\r\n                                <td>{value.name}</td>\r\n                                <td>{value.city}</td>\r\n                                <td>{value.parameter}</td>\r\n                                <td><div style={style.numCell}>{value.value}</div></td>\r\n                                <td>{value.unit}</td>\r\n                            </tr>\r\n                    ))}\r\n                </tbody>\r\n                <PaginationFooter\r\n                    handlePagination={handlePagination}\r\n                    state={state}\r\n                />\r\n            </table>\r\n        </>\r\n    );\r\n}\r\n","export const urlCountries = \"https://api.openaq.org/v1/countries?limit=500\";\r\nexport const urlCitiesWithParameter = \"https://api.openaq.org/v1/measurements?parameter=pm25&order_by=parameter&sort=asc&country=\";\r\n\r\nexport default {\r\n    urlCountries,\r\n    urlCitiesWithParameter\r\n};","//IMPORT ADDRESSES\r\nimport { urlCitiesWithParameter, urlCountries } from './urls';\r\n\r\nexport const fetchData = (url, dealWithResult, setState) => {\r\n  fetch(url, {\r\n    method: \"GET\",\r\n    mode: \"cors\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  })\r\n    .then(data => {\r\n      if (data.ok) {\r\n        let response = data.json();\r\n        response.then(result => {\r\n          dealWithResult(result.results, setState);\r\n        });\r\n      } else {\r\n        alert(\"Wystąpił błąd. Przepraszamy\");\r\n      }\r\n    })\r\n    .catch(err => {\r\n      console.error(err);\r\n    });\r\n};\r\n\r\nexport const getCitiesWithParameter = (result, setState) => {\r\n  let resultArray = [];\r\n  var promisesArray = [];\r\n  for (let i in result) {\r\n    promisesArray.push(\r\n      fetch(urlCitiesWithParameter + result[i].code)\r\n        .then(res => {\r\n          return res.json();\r\n        })\r\n        .then(res => {\r\n          resultArray.push(\r\n            {\r\n              ...result[i],\r\n              ...res.results[0]\r\n            }\r\n          );\r\n        })\r\n        .catch(err => { return console.log(err); })\r\n    );\r\n  }\r\n  Promise.all(promisesArray).then(function () {\r\n    let slicedArr = resultArray.slice(0, 10);\r\n    setState(state => ({ ...state, data: resultArray, page: slicedArr }));\r\n  });\r\n};\r\nexport const setCountriesWithCities = setState => {\r\n  fetchData(urlCountries, getCitiesWithParameter, setState);\r\n};\r\n//exports********************************************************************************\r\nexport default {\r\n  setCountriesWithCities,\r\n  fetchData,\r\n  getCitiesWithParameter\r\n};","const sortDescending = (arrOfObj, byKey) => {\r\n    function compare(a, b) {\r\n        const objA = a[byKey];\r\n        const objB = b[byKey];\r\n        let comparison = 0;\r\n        if (objA > objB) {\r\n            comparison = -1;\r\n        } else if (objA < objB) {\r\n            comparison = 1;\r\n        }\r\n        return comparison;\r\n    }\r\n    return arrOfObj.sort(compare);\r\n};\r\nconst sortAscending = (arrOfObj, byKey) => {\r\n    function compare(a, b) {\r\n        const objA = a[byKey];\r\n        const objB = b[byKey];\r\n        let comparison = 0;\r\n        if (objA > objB) {\r\n            comparison = 1;\r\n        } else if (objA < objB) {\r\n            comparison = -1;\r\n        }\r\n        return comparison;\r\n    }\r\n    return arrOfObj.sort(compare);\r\n};\r\nexport const sortObjects = (state, rowKey, setState) => {\r\n    let object = state.data;\r\n    let sorting = state.sorting;\r\n    let pageEnd = state.pageEnd;\r\n    let pageStart = pageEnd - 10;\r\n    let slicedArr = [];\r\n    if (rowKey === state.sortingKey) {\r\n        switch (sorting) {\r\n            case null:\r\n                let ascending = sortAscending(object, rowKey);\r\n                slicedArr = ascending.slice(pageStart, pageEnd);\r\n                setState(state => ({ ...state, data: ascending, page: slicedArr, sorting: \"asc\", sortingKey: rowKey }));\r\n                break;\r\n            case \"asc\":\r\n                let descending = sortDescending(object, rowKey);\r\n                slicedArr = descending.slice(pageStart, pageEnd);\r\n                setState(state => ({ ...state, data: descending, page: slicedArr, sorting: \"desc\", sortingKey: rowKey }));\r\n                break;\r\n            default:\r\n                ascending = sortAscending(object, rowKey);\r\n                slicedArr = ascending.slice(pageStart, pageEnd);\r\n                setState(state => ({ ...state, data: ascending, page: slicedArr, sorting: \"asc\", sortingKey: rowKey }));\r\n                break;\r\n        }\r\n    } else {\r\n        let ascending = sortAscending(object, rowKey);\r\n        slicedArr = ascending.slice(pageStart, pageEnd);\r\n        setState(state => ({ ...state, data: ascending, page: slicedArr, sorting: \"asc\", sortingKey: rowKey }));\r\n    };\r\n};\r\n\r\nexport default {\r\n    sortObjects\r\n};","export const pagingTable = (state, paging, setState) => {\r\n    let pageEnd = state.pageEnd;\r\n    let pageStart = pageEnd - 10;\r\n    let newStart = 0;\r\n    let newEnd = 0;\r\n    let slicedArr = [];\r\n    switch (paging) {\r\n        case \"prev\":\r\n            newStart = pageStart - 10;\r\n            newStart = newStart < 0 ? 0 : newStart;\r\n            newEnd = newStart + 10;\r\n            slicedArr = state.data.slice(newStart, newEnd);\r\n            setState(state => ({ ...state, page: slicedArr, pageEnd: newEnd }));\r\n            break;\r\n        case \"next\":\r\n            newStart = pageStart + 10;\r\n            let maxStart = state.data.length - 10;\r\n            newStart = newStart > maxStart ? maxStart : newStart;\r\n            newEnd = newStart + 10;\r\n            slicedArr = state.data.slice(newStart, newEnd);\r\n            setState(state => ({ ...state, page: slicedArr, pageEnd: newEnd }));\r\n            break;\r\n        default:\r\n            slicedArr = state.data.slice(pageStart, pageEnd);\r\n            setState(state => ({ ...state, page: slicedArr }));\r\n            break;\r\n    }\r\n};\r\n\r\nexport default {\r\n    pagingTable\r\n};","export const searchTable = (state, searchValue, setState) => {\r\n    const stateArr = state.data;\r\n    let newArr = [];\r\n    let slicedArr = [];\r\n    let object;\r\n    for (let i = 0, arrLen = stateArr.length; i < arrLen; i++) {\r\n        object = stateArr[i];\r\n        for (let key in object) {\r\n            let index = `${object[key]}`.toLowerCase().indexOf(searchValue.toLowerCase());\r\n            if (index !== -1) {\r\n                newArr.push(object);\r\n            }\r\n        }\r\n    }\r\n    let uniq = [...new Set(newArr)];\r\n    slicedArr = uniq.slice(0, 10);\r\n    setState(state => ({ ...state, page: slicedArr }));\r\n};\r\n\r\nexport default {\r\n    searchTable\r\n};","import React, { useState, useEffect, useLayoutEffect } from 'react';\r\n//general style\r\nimport './App.css';\r\n//components\r\nimport Table from './components/Table/Table';\r\n//functions\r\nimport { setCountriesWithCities } from './shared/sharedFunctions';\r\nimport { sortObjects } from './components/TableHeaders/TableHeadersFunc';\r\nimport { pagingTable } from './components/PaginationFooter/PaginationFooterFunc';\r\nimport { searchTable } from './components/SearchInput/SearchInputFunc';\r\n\r\nfunction App() {\r\n    //state*****************************************************************\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        page: [],\r\n        pageEnd: 10,\r\n        sortingKey: null,\r\n        sorting: null,\r\n        isMobile: false,\r\n        mobileColumn: \"city\"\r\n    });\r\n    //functions**************************************************************\r\n    useEffect(() => {\r\n        setCountriesWithCities(setState);\r\n    }, []);\r\n    useLayoutEffect(() => {\r\n        const checkSize = () => {\r\n            if (window.innerWidth < 1000) {\r\n                setState(state => ({ ...state, isMobile: true }));\r\n            } else {\r\n                setState(state => ({ ...state, isMobile: false }));\r\n            }\r\n        }\r\n        window.addEventListener('resize', checkSize);\r\n        checkSize();\r\n        return () => window.removeEventListener('resize', checkSize);\r\n    }, []);\r\n\r\n    const handleSorting = rowKey => {\r\n        sortObjects(state, rowKey, setState);\r\n    };\r\n    const handlePagination = paging => {\r\n        pagingTable(state, paging, setState);\r\n    };\r\n    const handleSearch = event => {\r\n        let searchValue = event.target.value;\r\n        searchTable(state, searchValue, setState);\r\n    };\r\n    const handleMobileColumn = key => {\r\n        setState(state => ({ ...state, mobileColumn: key }));\r\n    };\r\n    //component********************************************************************\r\n    return (\r\n        <div className=\"App\">\r\n            <Table\r\n                state={state}\r\n                handleSorting={handleSorting}\r\n                handlePagination={handlePagination}\r\n                handleSearch={handleSearch}\r\n                handleMobileColumn={handleMobileColumn}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}